# .github/workflows/build-frr-grpc.yml
name: Build FRR (amd64 native + arm64 via QEMU buildx)

on:
  workflow_dispatch:
    inputs:
      frr_version:
        description: "FRR git tag / branch (e.g. frr-10.3.1)"
        required: true
        default: "frr-10.3.1"

env:
  YANG_VER: "2.1.148-0.2"
  YANG_BASE: "https://launchpad.net/ubuntu/+archive/primary/+files"

################################################################################
# JOB 1 – native amd64 build
################################################################################
jobs:
  build-amd64:
    runs-on: ubuntu-24.04
    env:
      FRR_VERSION: ${{ inputs.frr_version }}

    steps:
      - uses: actions/checkout@v4
        with:
          repository: FRRouting/frr
          ref: ${{ env.FRR_VERSION }}

      - name: Install build deps (amd64)
        run: |
          sudo add-apt-repository -y universe
          sudo apt update
          sudo apt install -y \
            build-essential autoconf automake libtool pkg-config \
            cmake ninja-build \
            libreadline-dev libjson-c-dev libsnmp-dev libcap-dev \
            python3-dev bison flex \
            libgrpc-dev libgrpc++-dev protobuf-compiler-grpc \
            libprotobuf-dev protobuf-compiler \
            libgrpc-dev libprotobuf-dev protobuf-c-compiler \
            libprotobuf-c-dev libelf-dev wget checkinstall

          # libyang 2.1.148 (amd64)
          wget -q ${YANG_BASE}/libyang2t64_${YANG_VER}_amd64.deb
          wget -q ${YANG_BASE}/libyang2-dev_${YANG_VER}_amd64.deb
          sudo apt install -y ./libyang2t64_${YANG_VER}_amd64.deb \
                              ./libyang2-dev_${YANG_VER}_amd64.deb

      - name: Bootstrap
        run: |
          ./bootstrap.sh
          git submodule update --init --recursive

      - name: Configure & compile (amd64)
        run: |
          mkdir build && cd build
          ../configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var \
                       --enable-grpc --enable-vtysh \
                       --with-pkg-extra-version="-github-${{ github.run_number }}"
          make -j"$(nproc)"

      - name: Package .deb (amd64)
        run: |
          cd build
          sudo checkinstall -D --install=no -y \
            --pkgname=frr --pkgversion=${{ env.FRR_VERSION }} --pkgrelease=1 \
            --arch=amd64 --pakdir=$GITHUB_WORKSPACE/pkg-amd64 \
            make install

      - uses: actions/upload-artifact@v4
        with:
          name: frr-amd64
          path: pkg-amd64/*.deb

################################################################################
# JOB 2 – arm64 build via QEMU + Buildx
################################################################################
  build-arm64:
    runs-on: ubuntu-24.04
    env:
      FRR_VERSION: ${{ inputs.frr_version }}

    steps:
      - uses: actions/checkout@v4
        with:
          repository: FRRouting/frr
          ref: ${{ env.FRR_VERSION }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build arm64 inside container
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64
          outputs: type=local,dest=out
          push: false
          build-args: |
            FRR_VERSION=${{ env.FRR_VERSION }}
            YANG_VER=${{ env.YANG_VER }}
            YANG_BASE=${{ env.YANG_BASE }}
          file: .github/Dockerfile.arm64
          tags: frr-build:arm64

      - name: Collect .deb from container
        run: |
          mkdir pkg-arm64
          mv out/*.deb pkg-arm64/

      - uses: actions/upload-artifact@v4
        with:
          name: frr-arm64
          path: pkg-arm64/*.deb

################################################################################
# JOB 3 – optional GitHub release if run from a tag
################################################################################
  release:
    needs: [build-amd64, build-arm64]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: frr-*
          merge-multiple: true
          path: release
      - uses: softprops/action-gh-release@v2
        with:
          files: release/*.deb
